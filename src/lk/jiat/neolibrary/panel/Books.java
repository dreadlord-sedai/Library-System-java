/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lk.jiat.neolibrary.panel;

import com.formdev.flatlaf.FlatClientProperties;
import lk.jiat.neolibrary.gui.Home;
import lk.jiat.neolibrary.component.RoundButton;
import lk.jiat.neolibrary.component.FormattedTable;
import lk.jiat.neolibrary.component.FormattedTextField;
import lk.jiat.neolibrary.dialog.AddBook;
import lk.jiat.neolibrary.entity.BookStatus;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import lk.jiat.neolibrary.connection.MySQL;
import lk.jiat.neolibrary.validation.Validator;
import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;

/**
 *
 * @author Yashitha
 */
public class Books extends javax.swing.JPanel {

    /**
     * Creates new form Books
     */
    private final Home homeScreen;
    private final HashMap<String, String> searchByMap;
    private final String BASE_QUERY = "SELECT * FROM `book` INNER JOIN `genre` ON `book`.`genre_id` = `genre`.`genre_id` "
                + "INNER JOIN `book_status` ON `book`.`b_status_id` = `book_status`.`b_status_id`";

    private String query;

    public Books(Home parent) {
        initComponents();
        this.homeScreen = parent;
        this.searchByMap = new HashMap();
        this.query = BASE_QUERY + " ORDER BY `book_id` ASC";
        init();
        loadStatus();
        loadSearchBy();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void init() {
        // Modern glassmorphism styling
        this.setBackground(new Color(15, 23, 42)); // Slate-900
        
        // Enhanced scroll pane styling
        jScrollPane2.putClientProperty(FlatClientProperties.STYLE, "arc:20; borderWidth:0");
        
        // Modern combo box styling
        searchByCombo.putClientProperty(FlatClientProperties.STYLE, "arc:12; borderWidth:1");
        bookStatusCombo.putClientProperty(FlatClientProperties.STYLE, "arc:12; borderWidth:1");
        
        // Enhanced search field styling
        bookSearchField.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(71, 85, 105), 1),
            BorderFactory.createEmptyBorder(10, 15, 10, 15)
        ));
        bookSearchField.setBackground(new Color(30, 41, 59));
        bookSearchField.setForeground(new Color(241, 245, 249));
        bookSearchField.setFont(new Font("Inter", Font.PLAIN, 14));
        
        // Modern table styling
        bookListTable.setRowHeight(45);
        bookListTable.setFont(new Font("Inter", Font.PLAIN, 14));
        bookListTable.setForeground(new Color(241, 245, 249));
        bookListTable.setBackground(new Color(30, 41, 59));
        bookListTable.setGridColor(new Color(71, 85, 105));
        
        // Enhanced typography
        updateTypography();
        
        // Modern button styling
        styleButtons();
    }
    
    private void updateTypography() {
        // Header with modern typography
        jLabel1.setFont(new Font("Inter", Font.BOLD, 32));
        jLabel1.setForeground(new Color(248, 250, 252));
        
        // Combo box styling
        searchByCombo.setFont(new Font("Inter", Font.PLAIN, 14));
        searchByCombo.setForeground(new Color(241, 245, 249));
        searchByCombo.setBackground(new Color(30, 41, 59));
        
        bookStatusCombo.setFont(new Font("Inter", Font.PLAIN, 14));
        bookStatusCombo.setForeground(new Color(241, 245, 249));
        bookStatusCombo.setBackground(new Color(30, 41, 59));
    }
    
    private void styleButtons() {
        // Enhanced button styling
        bookSearchBtn.setFont(new Font("Inter", Font.BOLD, 14));
        bookSearchBtn.setPreferredSize(new java.awt.Dimension(120, 40));
        
        addBookBtn.setFont(new Font("Inter", Font.BOLD, 14));
        addBookBtn.setPreferredSize(new java.awt.Dimension(160, 40));
        
        generateReportBtn.setFont(new Font("Inter", Font.BOLD, 14));
        generateReportBtn.setPreferredSize(new java.awt.Dimension(180, 40));
    }

    private void loadStatus() {
        BookStatus[] stats = BookStatus.values();
        bookStatusCombo.removeAllItems();
        bookStatusCombo.addItem("All");
        for (BookStatus s : stats) {
            bookStatusCombo.addItem(String.valueOf(s));
        }
    }

    private void loadSearchBy() {
        searchByCombo.removeAllItems();
        searchByCombo.addItem("Search By");
        for (int i = 0; i < bookListTable.getColumnCount(); i++) {
            searchByCombo.addItem(bookListTable.getColumnName(i));
        }

        searchByMap.put("ID", "`book`.`book_id`");
        searchByMap.put("Title", "`book`.`title`");
        searchByMap.put("Author", "`book`.`Author`");
        searchByMap.put("Genre", "`genre`.`genre_name`");
        searchByMap.put("Added Date", "`book`.`added_date`");
        searchByMap.put("Status", "`book`.`b_status_id`");
    }
    
    private void loadData() {
        ResultSet tableData;
        DefaultTableModel bookDTM = (DefaultTableModel) bookListTable.getModel();
        try {
            tableData = MySQL.executeSearch(query);
            while (tableData.next()) {
                String dateStr = tableData.getString("added_date");
                SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                SimpleDateFormat outputFormat = new SimpleDateFormat("dd MMMM, yyyy");

                Date date = inputFormat.parse(dateStr);

                Vector<String> v = new Vector();
                v.add(tableData.getString("book_id"));
                v.add(tableData.getString("title"));
                v.add(tableData.getString("Author"));
                v.add(tableData.getString("genre_name"));
                v.add(outputFormat.format(date));
                v.add(tableData.getString("b_status_name"));
                bookDTM.addRow(v);
            }
        } catch (SQLException | ParseException e) {
            e.printStackTrace();
        }

    }

    private void searchData() {
        String searchBySelected = searchByCombo.getSelectedItem().toString();
        int statusSelected = bookStatusCombo.getSelectedIndex();
        String column = searchByMap.get(searchBySelected);
        String searchText = bookSearchField.getText();
        if (searchBySelected.equals("Status")) {
            if (statusSelected != 0) {
                query = BASE_QUERY + " WHERE " + column + " = '" + statusSelected + "' ORDER BY `book_id` ASC;";
            }else{
                query = BASE_QUERY + " ORDER BY `book_id` ASC;";
            }
        } else {
            query = BASE_QUERY + " WHERE " + column + " LIKE '%" + searchText + "%' ORDER BY `book_id` ASC;";
        }
        
        DefaultTableModel dtm = (DefaultTableModel) bookListTable.getModel();
        dtm.setRowCount(0);

        loadData();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookSearchField = new FormattedTextField(true);
        bookSearchBtn = new RoundButton();
        addBookBtn = new RoundButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookListTable = new FormattedTable();
        generateReportBtn = new RoundButton();
        jLabel1 = new javax.swing.JLabel();
        bookStatusCombo = new javax.swing.JComboBox<>();
        searchByCombo = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(0, 30, 51));
        setPreferredSize(new java.awt.Dimension(1792, 1010));

        bookSearchField.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N

        bookSearchBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        bookSearchBtn.setText("Search");
        bookSearchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSearchBtnActionPerformed(evt);
            }
        });

        addBookBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        addBookBtn.setText("Add New Book");
        addBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookBtnActionPerformed(evt);
            }
        });

        bookListTable.setBackground(new java.awt.Color(60, 63, 65));
        bookListTable.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        bookListTable.setForeground(new java.awt.Color(255, 255, 255));
        bookListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Author", "Genre", "Added Date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookListTable.setRowHeight(40);
        bookListTable.setRowSelectionAllowed(false);
        bookListTable.setShowHorizontalLines(true);
        bookListTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(bookListTable);
        if (bookListTable.getColumnModel().getColumnCount() > 0) {
            bookListTable.getColumnModel().getColumn(0).setMinWidth(150);
            bookListTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            bookListTable.getColumnModel().getColumn(0).setMaxWidth(150);
            bookListTable.getColumnModel().getColumn(2).setMinWidth(300);
            bookListTable.getColumnModel().getColumn(2).setPreferredWidth(300);
            bookListTable.getColumnModel().getColumn(2).setMaxWidth(300);
            bookListTable.getColumnModel().getColumn(3).setMinWidth(200);
            bookListTable.getColumnModel().getColumn(3).setPreferredWidth(200);
            bookListTable.getColumnModel().getColumn(3).setMaxWidth(200);
            bookListTable.getColumnModel().getColumn(4).setMinWidth(250);
            bookListTable.getColumnModel().getColumn(4).setPreferredWidth(250);
            bookListTable.getColumnModel().getColumn(4).setMaxWidth(250);
            bookListTable.getColumnModel().getColumn(5).setMinWidth(150);
            bookListTable.getColumnModel().getColumn(5).setPreferredWidth(150);
            bookListTable.getColumnModel().getColumn(5).setMaxWidth(150);
        }

        generateReportBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        generateReportBtn.setText("Generate Report");

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 214, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Books");

        bookStatusCombo.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        bookStatusCombo.setForeground(new java.awt.Color(255, 255, 255));
        bookStatusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Issued", "Overdue", "Returned(late)" }));

        searchByCombo.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        searchByCombo.setForeground(new java.awt.Color(255, 255, 255));
        searchByCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        searchByCombo.setSelectedItem(searchByCombo);
        searchByCombo.setPreferredSize(new java.awt.Dimension(127, 30));
        searchByCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bookSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bookStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bookSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 783, Short.MAX_VALUE)
                        .addComponent(addBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(generateReportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(160, 160, 160)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(generateReportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookBtnActionPerformed
        AddBook addBookDialog = new AddBook(homeScreen, true);
        addBookDialog.setLocationRelativeTo(homeScreen);
        addBookDialog.setVisible(true);
    }//GEN-LAST:event_addBookBtnActionPerformed

    private void bookSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSearchBtnActionPerformed
        if (!Validator.isIndexValid(searchByCombo.getSelectedIndex())) {
            return;
        }
        if (bookSearchField.isEnabled()) {
            if (!Validator.isInputFieldValid(bookSearchField.getText())) {
                return;
            }
        }
        searchData();
    }//GEN-LAST:event_bookSearchBtnActionPerformed

    private void searchByComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByComboActionPerformed
        if (String.valueOf(searchByCombo.getSelectedItem()).equals("Status")) {
            bookSearchField.setText("");
            bookSearchField.setEnabled(false);
            bookStatusCombo.setEnabled(true);
        } else {
            if (String.valueOf(searchByCombo.getSelectedItem()).equals("Added Date")){
                bookSearchField.putClientProperty("JTextField.placeholderText", "YYYY-MM-DD");
            }
            bookSearchField.setText("");
            bookSearchField.setEnabled(true);
            bookStatusCombo.setEnabled(false);
        }
    }//GEN-LAST:event_searchByComboActionPerformed
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookBtn;
    private javax.swing.JTable bookListTable;
    private javax.swing.JButton bookSearchBtn;
    private javax.swing.JTextField bookSearchField;
    private javax.swing.JComboBox<String> bookStatusCombo;
    private javax.swing.JButton generateReportBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> searchByCombo;
    // End of variables declaration//GEN-END:variables
}
